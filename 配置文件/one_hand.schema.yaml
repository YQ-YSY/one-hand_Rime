# Rime 单手笔顺输入法 3.0 版，一善鱼 YQ-YSY <YQ-YSY@163.com>
# 单手笔顺输入法（3.0 Rime版）软件，开源网址： https://gitee.com/yq-ysy/one-hand_-rime 或 https://github.com/YQ-YSY/one-hand_Rime
# 单手笔顺输入法（3.0版）TXT码表，开源网址： https://gitee.com/yq-ysy/one-hand_code 或 https://github.com/YQ-YSY/stroke-seq_MB
# 编码 utf-8 
# 使用 UNIX 换行符（LF）
# 鉴于一些文本编辑器会为 UTF-8 编码的文件添加 BOM 标记，为了防止误将该字符混入文中， 不要从文件的第一行开始正文，而请在该行行首以 # 记号起一行注释
# one_hand.schema.yaml 配制
# 这是“单手笔顺输入法（Rime）版”的主要配制文件。
# 相关 Rime 教程参考：  https://github.com/rime/home/wiki/RimeWithSchemata

schema:                    # 概要
  name: "单手笔顺"          # 方案的显示名称（即出现于方案菜单中显示给用户看的，通常为中文），最好加引号表明是字符串
  schema_id: one_hand      # 方案的内部名称，用于在代码中调取或引用此方案，通常由小写英文、数字、下划线组成
  version: "3.0"           # 版本号，在发布新版前请确保已更新此版本号，最好加引号表明是字符串
  author:                  # 作者、发明人、撰写者。如果您使用别人方案做出了修改，请保留原作者的信息，并将自己的名字加在后面
    - 一善鱼 <yq-ysy@163.com>
  description: |           # 注释，如果本方案依赖于其它方案，请在此说明（通常用于反向查询所依赖的其它方案，或着是说明两种或多种方案在同时使用）
    使用Rime平台的单手笔顺输入方案。

engine:                    # 输入引擎设定，即挂接组件的“处方”，引擎分四组：
  processors:              # 一、处理器，这批组件处理各类按键消息
    - ascii_composer       # ※ 处理英文模式及中英文切换
    - recognizer           # ※ （可精细配置）与 matcher 搭配，处理符合特定规则的输入码，如网址、反查等
    - key_binder           # ※ （可精细配置）在特定条件下将按键绑定到其他按键，如重定义逗号、句号爲候选翻页键
    - speller              # ※ （可精细配置）拼写处理器，接受字符按键，编辑输入码
    - punctuator           # ※ （可精细配置）句读处理器，将单个字符按键直接映射爲文字符号
    - selector             # ※ 选字处理器，处理数字选字键、上、下候选定位、换页键
    - navigator            # ※ 处理输入栏内的光标移动键
    - express_editor       # ※ 编辑器，处理空格、回车上屏、回退键等
#    - fluid_editor         # ※ （不常用）句式编辑器，用于以空格断词、回车上屏的【注音】、【语句流】等输入方案，替换 express_editor，也可以写作 fluency_editor
#    - chord_composer       # ※ （不常用）和弦作曲家或曰并击处理器，用于【宫保拼音】等多键并击的输入方案
  segmentors:              # 二、分割器，这批组件识别不同内容类型，将输入码分段並加上标签
    - ascii_segmentor      # ※ 标识英文段落（例如在英文模式下）字母直接上屛
    - matcher              # ※ 配合recognizer标识符合特定规则的段落，如网址、反查等，加上特定标签
    - abc_segmentor        # ※ （可精细配置）标识常规的文字段落，加上abc这个标签
    - punct_segmentor      # ※ 标识句读段落，〔键入标点符号用〕加上punct这个标签
    - fallback_segmentor   # ※ 标识其他未标识段落
    - affix_segmentor      # ※ （可精细配置）用戶自定義标签，此項可加載多個實例，後接@+标签名
  translators:             # 三、转译器，这批组件翻译特定类型的编码段爲一组候选文字（注意不要与编码翻译器弄混，多了一个s）
    - echo_translator      # ※ 没有其他候选字时，回显输入码（输入码可以 Shift+Enter 上屛）
    - punct_translator     # ※ 配合 punct_segmentor 转换标点符号
    - table_translator     # ※ （可精细配置）码表翻译器，用于仓颉、五笔等基于码表的输入方案，替换 script_translator，此项可加载多个实例，后接@+翻译器名（如：cangjie、wubi等）
#    - script_translator@second_translator    # ※ （可精细配置）脚本翻译器，用于拼音、粤拼等基于音节表的输入方案，此项可加载多个实例，后接@+翻译器名（如：pinyin、jyutping等）。如果要开启脚本拼写运算，必须开启这个。
#    - reverse_lookup_translator  # ※ （不常用）反查翻译器，用另一种编码方案查码
  filters:                 # 四、过滤器，这批组件过滤翻译的结果
    - simplifier           # ※ （可精细配置）繁简转换
    - uniquifier           # ※ 过滤重複的候选字，有可能来自simplifier繁简转换
    - cjk_minifier         # ※ 字符集过滤〔用于script_translator，使之支援extended_charset开关〕
    - reverse_lookup_filter  # ※ （可精细配置）反查滤镜，以更灵活的方式反查，Rime1.0后替代reverse_lookup_translator，此项可加载多个实例，后接@+滤镜名（如：pinyin_lookup、jyutping_lookup等）
    - single_char_filter   # ※ （可精细配置）单字过滤器，如加载此组件，则屛敝词典中的词组（仅table_translator有效）

# # # 以下设置可参考文档 https://github.com/LEOYoon-Tsaw/Rime_collections/blob/master/Rime_description.md

translator:                # 编码翻译器（注意不要与转译器弄混，少了一个s）
# # # 单手笔顺输入法的词典：单字近3万个，核心词汇36万个，扩展词汇（可选）243万个，含精简码、六全码。
  dictionary: one_hand     # 调用输入法编码对应的字典，字典名称，确保与字典文件前端名称一致，也要与配置文件前端名称一致。
#  enable_user_dict: false  # 是否开启用户词典（用户词典记录动态字词频、用户词），true/false，在default.custom.yaml文件有相同的设置，不要在此修改。
  strict_spelling: true    # 是否开启脚本拼写运算，限定该拼写不用于输入单字
#  initial_quality: 0.5     # 降低它的优先级

#second_translator:
#  dictionary: one_hand_2   # 用于 script_translator 的无编码字典，可实现词组的每个字不限定输入的编码数。但此功能不完善。
#  enable_user_dict: false 
#  strict_spelling: true 
#  initial_quality: 1       # 提高它的优先级

speller:                   # 拼写处理器
# # # 单手笔顺输入法用的是数字编码（则此用的纯数字是指字母大键盘上的数字，能出现在浮动栏上。）
  alphabet: 0123456789     # 用于编码的可输入字符
# # # 单手笔顺输入法用小数点分隔词组的每个字
  delimiter: "."           # 词组的每个字分隔符号
#  algebra:                 # 脚本拼写运算，相关 Rime 教程参考：https://github.com/rime/home/wiki/SpellingAlgebra
#    - derive/^(\d{1}).+$/$1/  # 用于 script_translator 的无编码字典，可实现词组的每个字不限定输入的编码数。但此功能不完善。
#    - derive/^(\d{2}).+$/$1/
#    - derive/^(\d{3}).+$/$1/
#    - derive/^(\d{4}).+$/$1/
#    - derive/^(\d{5}).+$/$1/
#    - derive/^(\d{6}).+$/$1/
#    - derive/^(\d{7}).+$/$1/
##    - derive/^([0-9][0-9]).+$/$1/ # 每个字仅取前二个码


key_binder:                # 键盘绑定器
  bindings:                # 键盘绑定，设置功能性快捷键，每一条binding可能包含：accept实际所按之键、send输出效果、toggle切换开关和when作用范围（send和toggle二选一），
                           # when可用字段包含：paging翻页用，has_menu操作候选项用，composing操作输入码用，always全域总是使用。
# # # 单手笔顺输入法用小键盘的数字键输入数字，即映射为字母大键盘的数字键
    - {accept: KP_0, send: 0, when: always}
    - {accept: KP_1, send: 1, when: always}
    - {accept: KP_2, send: 2, when: always}
    - {accept: KP_3, send: 3, when: always}
    - {accept: KP_4, send: 4, when: always}
    - {accept: KP_5, send: 5, when: always}
    - {accept: KP_6, send: 6, when: always}
    - {accept: KP_7, send: 7, when: always}
    - {accept: KP_8, send: 8, when: always}
    - {accept: KP_9, send: 9, when: always}

# # # 单手笔顺输入法用小键盘回车确认输入，即映射为空格键，能让数字编码变汉字上屏，单独输入时仍为回车换行。如果系统不认 KP_Enter，需要改为 Return。
    - {accept: KP_Enter, send: space, when: has_menu}
# # # 单手笔顺输入法用小键盘的“-”减号键映射为后退删除键，用于修改输入错误，但always也不能修改已打出的汉字（可惜了），单独输入时仍为-号。
    - {accept: KP_Subtract, send: BackSpace, when: has_menu}
# # # 单手笔顺输入法用小键盘的“+”加号键映射为字母大键盘的向下键，方便向下选字然后回车即可，因为笔顺重码少，这样也够用了，单独输入时仍为+号。
    - {accept: KP_Add, send: Down, when: has_menu}
# # # 如果需要翻页选择候选字，可以按数字小键盘的 NumLock（关闭数字小键盘的灯），即可使用数字小键盘作为方向键和翻页键。


# # # 单手笔顺输入法用小键盘“/”除号映射为大键盘“,”逗号键，可跟着数字编码变汉字上屏的同时打出中文逗号，单独输入时也是中文逗号。
    - {accept: KP_Divide, send: comma, when: always}
# # # 单手笔顺输入法用小键盘“.”小数点映射为字母大键盘的小数点，跟在数字后面用来作为词组的分隔符，单独输入时为中文句号。
    - {accept: KP_Decimal, send: period, when: always}
# # # 单手笔顺输入法用小键盘的“*”乘号（星号）键映射为字母大键盘的回车键，这样就能直接输出纯数字（包括小数点），单独输入时仍为星号。
    - {accept: KP_Multiply, send: Return, when: has_menu}
# # # 原本想使用小键盘“*”乘号（星号）作为模糊查询，匹配字词，这样能大大加快输入的速度，可惜不知道应该如何实现，有兴趣的朋友帮忙研究一下

punctuator:                # 句读处理器，
  import_preset: default   # 调用 default 默认的文件配置，能使用大键盘打出中文标点符号，字母依然是英文（再也不需要按 Shift 键切换中英文状态了）。

#menu:
#  page_size: 10             # 候选字每页显示个数，最多10个，在default.custom.yaml文件有相同的设置，不要在此修改。

#  alternative_select_keys: asdfghjkl  # 如果编码字符占用了数字键，那么可以另设选字键。（本来想用“+1、+2”这样的组合键来选字，可惜Rime不支持，我也不会写程序。退一步想，即使占用大键盘的字母键来选字，然后想用小键盘的按键来映射，也已经没有其它按键可以用了，Rime也无法在选字时映射小键盘的KP_Home之类按键映射为字母，所以用不上。小键盘的KP_Home之类按键以后可以设计为类似手机的9键字母输入，这样小键盘打拼音就更方便了。）

### （开源）单手笔顺输入法码表 https://gitee.com/yq-ysy/one-hand_code 附有：悬浮栏功能设计说明图
### 希望能有程序员，写出真正的“单手笔顺输入法”独立程序，实现不用按键切换的“拼音笔顺双输入、英文笔顺双输入”。
### 如果能按“悬浮栏功能设计说明图”实现更多的功能，那就更好了，方便大众使用。

